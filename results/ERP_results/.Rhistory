# Display the plot
print(p.p1.Ov)
df.n1 <- read.csv("Mean Amplitude for Window 75-130/eff_summary_triallevel.csv")
df.n1$n_trials <- as.numeric(sapply(strsplit(df.n1$cond_s,"_"), `[`, 2))
p.n1 <- ggplot(df.n1, aes(x = n_trials, y = mean)) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = .2) +
geom_line() + geom_point()+
scale_x_continuous(limits = c(9, 101), breaks = seq(10, 90, by = 10)) +
theme(legend.position = "bottom") +
labs(x = "Number of Trials", y = expression("Effect Size (Cohen's d)")) +
ggtitle("N1") +
scale_fill_manual(values = c("#990000", "gray50", "orange")) +
scale_color_manual(values = c("#990000", "gray50", "orange"))
print(p.n1)
df.p1 <- read.csv("Mean Amplitude for Window 100-230/eff_summary_triallevel.csv")
df.p1$n_trials <- as.numeric(sapply(strsplit(df.p1$cond_s,"_"), `[`, 2))
p.p1 <- ggplot(df.p1, aes(x = n_trials, y = mean)) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = .2) +
geom_line() + geom_point()+
scale_x_continuous(limits = c(9, 101), breaks = seq(10, 90, by = 10)) +
theme(legend.position = "bottom") +
labs(x = "Number of Trials", y = expression("Effect Size (Cohen's d)")) +
ggtitle("N1") +
scale_fill_manual(values = c("#990000", "gray50", "orange")) +
scale_color_manual(values = c("#990000", "gray50", "orange"))
print(p.p1)
library(ggpubr)
ggsave("VEP_Eff_TrialLevel_Example.jpg", ggarrange(p.n1, p.p1, ncol=1, nrow=2, common.legend = FALSE, legend="bottom",labels = c("N1", "P1"), font.label = list(size = 18, face = "bold")), width = 10, height = 14, units = 'in', dpi = 150)
df.n1 <- read.csv("Mean Amplitude for Window 75-130/rel_summary_overall.csv")
dfm<-df.n1;
# Setting negative values to zero
dfm$mean[dfm$mean < 0] <- 0
dfm$lower_pct[dfm$lower_pct < 0] <- 0
dfm$upper_pct[dfm$upper_pct < 0] <- 0
df.n1 <- read.csv("Mean Amplitude for Window 75-130/rel_summary_overall.csv")
# Setting negative values to zero
df.n1$mean[df.n1$mean < 0] <- 0
df.n1$lower_pct[df.n1$lower_pct < 0] <- 0
df.n1$upper_pct[df.n1$upper_pct < 0] <- 0
p.n1.Ov <- ggplot(df.n1, aes(x = cond_s, y = mean, fill = cond_s)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.95), alpha = 0.7) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = 0.2) +
labs(x = "Condition", y = expression("Effect Size (Cohen's d)")) +
theme(legend.position = "none") +
ggtitle("N1 Effect Size") +
scale_fill_manual(values = c("#990000", "gray", "orange")) +
scale_color_manual(values = c("#990000", "gray", "orange"))
# Display the plot
print(p.n1.Ov)
# Setting negative values to zero
df.p1$mean[df.p1$mean < 0] <- 0
df.p1$lower_pct[df.p1$lower_pct < 0] <- 0
df.p1$upper_pct[df.p1$upper_pct < 0] <- 0
p.p1.Ov <- ggplot(df.p1, aes(x = cond_s, y = mean, fill = cond_s)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.95), alpha = 0.7) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = 0.2) +
labs(x = "Condition", y = expression("Effect Size (Cohen's d)")) +
theme(legend.position = "none") +
ggtitle("N1 Effect Size") +
scale_fill_manual(values = c("#990000", "gray", "orange")) +
scale_color_manual(values = c("#990000", "gray", "orange"))
# Display the plot
print(p.n1.Ov)
ggsave("/Rel_Overall_Example.jpg", ggarrange(p.n1, p.p1, ncol=1, nrow=2, common.legend = FALSE, legend="none",labels = c("N1", "P1"), font.label = list(size = 18, face = "bold")), width = 7, height = 14, units = 'in', dpi = 150)
ggsave("Rel_Overall_Example.jpg", ggarrange(p.n1, p.p1, ncol=1, nrow=2, common.legend = FALSE, legend="none",labels = c("N1", "P1"), font.label = list(size = 18, face = "bold")), width = 7, height = 14, units = 'in', dpi = 150)
df.n1 <- read.csv("Mean Amplitude for Window 75-130/rel_summary_overall.csv")
# Setting negative values to zero
df.n1$mean[df.n1$mean < 0] <- 0
df.n1$lower_pct[df.n1$lower_pct < 0] <- 0
df.n1$upper_pct[df.n1$upper_pct < 0] <- 0
p.n1.Ov <- ggplot(df.n1, aes(x = cond_s, y = mean, fill = cond_s)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.95), alpha = 0.7) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = 0.2) +
labs(x = "Condition", y = expression("Effect Size (Cohen's d)")) +
theme(legend.position = "none") +
ggtitle("N1 Effect Size") +
scale_fill_manual(values = c("#990000", "gray", "orange")) +
scale_color_manual(values = c("#990000", "gray", "orange"))
# Display the plot
print(p.n1.Ov)
df.p1 <- read.csv("/Mean Amplitude for Window 100-230/rel_summary_overall.csv")
ggsave("Rel_Overall_Example.jpg", ggarrange(p.n1, p.p1, ncol=1, nrow=2, common.legend = FALSE, legend="none",labels = c("N1", "P1"), font.label = list(size = 18, face = "bold")), width = 7, height = 14, units = 'in', dpi = 150)
df.n1 <- read.csv("Mean Amplitude for Window 75-130/rel_summary_overall.csv")
# Setting negative values to zero
df.n1$mean[df.n1$mean < 0] <- 0
df.n1$lower_pct[df.n1$lower_pct < 0] <- 0
df.n1$upper_pct[df.n1$upper_pct < 0] <- 0
p.n1.Ov <- ggplot(df.n1, aes(x = cond_s, y = mean, fill = cond_s)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.95), alpha = 0.7) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = 0.2) +
labs(x = "Condition", y = expression("Effect Size (Cohen's d)")) +
theme(legend.position = "none") +
ggtitle("N1 Effect Size") +
scale_fill_manual(values = c("#990000", "gray", "orange")) +
scale_color_manual(values = c("#990000", "gray", "orange"))
# Display the plot
print(p.n1.rel)
df.p1 <- read.csv("/Mean Amplitude for Window 100-230/rel_summary_overall.csv")
ggsave("Rel_Overall_Example.jpg", ggarrange(p.n1.rel, p.p1.rel, ncol=1, nrow=2, common.legend = FALSE, legend="none",labels = c("N1", "P1"), font.label = list(size = 18, face = "bold")), width = 7, height = 14, units = 'in', dpi = 150)
list.of.packages <- c("psych","ggplot2", "dplyr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
# Loading packages
lapply(list.of.packages, require, character.only = TRUE)
# Setting suggested plotting options
my_opts <- list(theme_classic() + theme(axis.text=element_text(size=14), axis.title=element_text(size=15,face="bold"), legend.title=element_text(size=14,face="bold"), legend.text=element_text(size=13), strip.text.x = element_text(size = 14, face="bold")))
setwd("/Users/macbook/Desktop/Reliability_Project_Scripts/READIE_Toolbox_0422/results/ERP_results")
############################################################
dfm <- read.csv("Mean Amplitude for Window 75-130/SME_triallevel.csv")
(p.n1 <- ggplot(dfm, aes(x =cond,y=aSEM, fill = cond)) +
stat_summary(fun.y = mean, geom = "bar", position=position_dodge(width=0.95), alpha = .7) +
geom_point(aes(colour=cond), size=1, position = "jitter", alpha = .4) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width=.3, position=position_dodge(width=0.95)) +
my_opts + labs(y = expression("Standardized Measurement Error")) +
theme(legend.position="none") + ggtitle("N1 VEP Task") )
# Note that this task does not have a meaningful condition variable. Feel free to change that so it best fit your study!
dfm <- read.csv("Mean Amplitude for Window 100-230/SME_triallevel.csv")
(p.p1 <- ggplot(dfm, aes(x =cond,y=aSEM, fill = cond)) +
stat_summary(fun.y = mean, geom = "bar", position=position_dodge(width=0.95), alpha = .7) +
geom_point(aes(colour=cond), size=1, position = "jitter", alpha = .4) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width=.3, position=position_dodge(width=0.95)) +
my_opts + labs(y = expression("Standardized Measurement Error")) +
theme(legend.position="none") + ggtitle("P1 VEP Task") )
# Note that this task does not have a meaningful condition variable. Feel free to change that so it best fit your study!
library(ggpubr)
ggsave("VEP_SME_Example_Fig.jpg", ggarrange(p.n1, p.p1, ncol=1, nrow=2, common.legend = FALSE, legend="none",labels = c("A", "B"), font.label = list(size = 18, face = "bold")), width = 7, height = 14, units = 'in', dpi = 150)
df.n1 <- read.csv("Mean Amplitude for Window 75-130/eff_summary_overall.csv")
# Plotting the data
p.n1.Ov <- ggplot(df.n1, aes(x = cond_s, y = mean, fill = cond_s)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.95), alpha = 0.7) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = 0.2) +
labs(x = "Condition", y = expression("Effect Size (Cohen's d)")) +
theme(legend.position = "none") +
ggtitle("N1 Effect Size") +
scale_fill_manual(values = c("#990000", "gray", "orange")) +
scale_color_manual(values = c("#990000", "gray", "orange"))
# Display the plot
print(p.n1.Ov)
df.p1 <- read.csv("Mean Amplitude for Window 100-230/eff_summary_overall.csv")
p.p1.Ov <- ggplot(df.p1, aes(x = cond_s, y = mean, fill = cond_s)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.95), alpha = 0.7) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = 0.2) +
labs(x = "Condition", y = expression("Effect Size (Cohen's d)")) +
theme(legend.position = "none") +
ggtitle("N1 Effect Size") +
scale_fill_manual(values = c("#990000", "gray", "orange")) +
scale_color_manual(values = c("#990000", "gray", "orange"))
# Display the plot
print(p.p1.Ov)
library(ggpubr)
ggsave("VEP_Eff_Overall_Example.jpg", ggarrange(p.n1, p.p1, ncol=1, nrow=2, common.legend = FALSE, legend="none",labels = c("N1", "P1"), font.label = list(size = 18, face = "bold")), width = 7, height = 14, units = 'in', dpi = 150)
list.of.packages <- c("psych","ggplot2", "dplyr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
# Loading packages
lapply(list.of.packages, require, character.only = TRUE)
# Setting suggested plotting options
my_opts <- list(theme_classic() + theme(axis.text=element_text(size=14), axis.title=element_text(size=15,face="bold"), legend.title=element_text(size=14,face="bold"), legend.text=element_text(size=13), strip.text.x = element_text(size = 14, face="bold")))
setwd("/Users/macbook/Desktop/Reliability_Project_Scripts/READIE_Toolbox_0422/results/ERP_results")
############################################################
dfm <- read.csv("Mean Amplitude for Window 75-130/SME_triallevel.csv")
(p.n1.sme <- ggplot(dfm, aes(x =cond,y=aSEM, fill = cond)) +
stat_summary(fun.y = mean, geom = "bar", position=position_dodge(width=0.95), alpha = .7) +
geom_point(aes(colour=cond), size=1, position = "jitter", alpha = .4) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width=.3, position=position_dodge(width=0.95)) +
my_opts + labs(y = expression("Standardized Measurement Error")) +
theme(legend.position="none") + ggtitle("N1 VEP Task") )
# Note that this task does not have a meaningful condition variable. Feel free to change that so it best fit your study!
dfm <- read.csv("Mean Amplitude for Window 100-230/SME_triallevel.csv")
(p.p1.sme <- ggplot(dfm, aes(x =cond,y=aSEM, fill = cond)) +
stat_summary(fun.y = mean, geom = "bar", position=position_dodge(width=0.95), alpha = .7) +
geom_point(aes(colour=cond), size=1, position = "jitter", alpha = .4) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width=.3, position=position_dodge(width=0.95)) +
my_opts + labs(y = expression("Standardized Measurement Error")) +
theme(legend.position="none") + ggtitle("P1 VEP Task") )
# Note that this task does not have a meaningful condition variable. Feel free to change that so it best fit your study!
list.of.packages <- c("psych","ggplot2", "dplyr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
# Loading packages
lapply(list.of.packages, require, character.only = TRUE)
# Setting suggested plotting options
my_opts <- list(theme_classic() + theme(axis.text=element_text(size=14), axis.title=element_text(size=15,face="bold"), legend.title=element_text(size=14,face="bold"), legend.text=element_text(size=13), strip.text.x = element_text(size = 14, face="bold")))
setwd("/Users/macbook/Desktop/Reliability_Project_Scripts/READIE_Toolbox_0422/results/ERP_results")
############################################################
dfm <- read.csv("Mean Amplitude for Window 75-130/SME_triallevel.csv")
(p.n1.sme <- ggplot(dfm, aes(x =cond,y=aSEM, fill = cond)) +
stat_summary(fun.y = mean, geom = "bar", position=position_dodge(width=0.95), alpha = .7) +
geom_point(aes(colour=cond), size=1, position = "jitter", alpha = .4) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width=.3, position=position_dodge(width=0.95)) +
my_opts + labs(y = expression("Standardized Measurement Error")) +
theme(legend.position="none") + ggtitle("N1 VEP Task") )
# Note that this task does not have a meaningful condition variable. Feel free to change that so it best fit your study!
dfm <- read.csv("Mean Amplitude for Window 100-230/SME_triallevel.csv")
(p.p1.sme <- ggplot(dfm, aes(x =cond,y=aSEM, fill = cond)) +
stat_summary(fun.y = mean, geom = "bar", position=position_dodge(width=0.95), alpha = .7) +
geom_point(aes(colour=cond), size=1, position = "jitter", alpha = .4) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width=.3, position=position_dodge(width=0.95)) +
my_opts + labs(y = expression("Standardized Measurement Error")) +
theme(legend.position="none") + ggtitle("P1 VEP Task") )
# Note that this task does not have a meaningful condition variable. Feel free to change that so it best fit your study!
library(ggpubr)
ggsave("VEP_SME_Example_Fig.jpg", ggarrange(p.n1.sme, p.p1.sme, ncol=1, nrow=2, common.legend = FALSE, legend="none",labels = c("A", "B"), font.label = list(size = 18, face = "bold")), width = 7, height = 14, units = 'in', dpi = 150)
df.n1 <- read.csv("Mean Amplitude for Window 75-130/eff_summary_overall.csv")
# Plotting the data
p.n1.eff <- ggplot(df.n1, aes(x = cond_s, y = mean, fill = cond_s)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.95), alpha = 0.7) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = 0.2) +
labs(x = "Condition", y = expression("Effect Size (Cohen's d)")) +
theme(legend.position = "none") +
ggtitle("N1 Effect Size") +
scale_fill_manual(values = c("#990000", "gray", "orange")) +
scale_color_manual(values = c("#990000", "gray", "orange"))
# Display the plot
print(p.n1.eff)
df.p1 <- read.csv("Mean Amplitude for Window 100-230/eff_summary_overall.csv")
p.p1.eff <- ggplot(df.p1, aes(x = cond_s, y = mean, fill = cond_s)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.95), alpha = 0.7) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = 0.2) +
labs(x = "Condition", y = expression("Effect Size (Cohen's d)")) +
theme(legend.position = "none") +
ggtitle("N1 Effect Size") +
scale_fill_manual(values = c("#990000", "gray", "orange")) +
scale_color_manual(values = c("#990000", "gray", "orange"))
# Display the plot
print(p.p1.eff)
library(ggpubr)
ggsave("VEP_Eff_Overall_Example.jpg", ggarrange(p.n1, p.p1, ncol=1, nrow=2, common.legend = FALSE, legend="none",labels = c("N1", "P1"), font.label = list(size = 18, face = "bold")), width = 7, height = 14, units = 'in', dpi = 150)
library(ggpubr)
ggsave("VEP_Eff_Overall_Example.jpg", ggarrange(p.n1.eff, p.p1.eff, ncol=1, nrow=2, common.legend = FALSE, legend="none",labels = c("N1", "P1"), font.label = list(size = 18, face = "bold")), width = 7, height = 14, units = 'in', dpi = 150)
df.n1 <- read.csv("Mean Amplitude for Window 75-130/eff_summary_triallevel.csv")
df.n1$n_trials <- as.numeric(sapply(strsplit(df.n1$cond_s,"_"), `[`, 2))
p.n1.eff.trial <- ggplot(df.n1, aes(x = n_trials, y = mean)) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = .2) +
geom_line() + geom_point()+
scale_x_continuous(limits = c(9, 101), breaks = seq(10, 90, by = 10)) +
theme(legend.position = "bottom") +
labs(x = "Number of Trials", y = expression("Effect Size (Cohen's d)")) +
ggtitle("N1") +
scale_fill_manual(values = c("#990000", "gray50", "orange")) +
scale_color_manual(values = c("#990000", "gray50", "orange"))
print(p.n1.eff.trial)
df.n1 <- read.csv("Mean Amplitude for Window 75-130/eff_summary_triallevel.csv")
df.n1$n_trials <- as.numeric(sapply(strsplit(df.n1$cond_s,"_"), `[`, 2))
p.n1.eff.trial <- ggplot(df.n1, aes(x = n_trials, y = mean)) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = .2) +
geom_line() + geom_point()+
scale_x_continuous(limits = c(9, 101), breaks = seq(10, 90, by = 10)) +
theme(legend.position = "bottom") +
labs(x = "Number of Trials", y = expression("Effect Size (Cohen's d)")) +
ggtitle("N1") +
scale_fill_manual(values = c("#990000", "gray50", "orange")) +
scale_color_manual(values = c("#990000", "gray50", "orange"))
print(p.n1.eff.trial)
df.p1 <- read.csv("Mean Amplitude for Window 100-230/eff_summary_triallevel.csv")
df.p1$n_trials <- as.numeric(sapply(strsplit(df.p1$cond_s,"_"), `[`, 2))
p.p1.eff.trial <- ggplot(df.p1, aes(x = n_trials, y = mean)) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = .2) +
geom_line() + geom_point()+
scale_x_continuous(limits = c(9, 101), breaks = seq(10, 90, by = 10)) +
theme(legend.position = "bottom") +
labs(x = "Number of Trials", y = expression("Effect Size (Cohen's d)")) +
ggtitle("N1") +
scale_fill_manual(values = c("#990000", "gray50", "orange")) +
scale_color_manual(values = c("#990000", "gray50", "orange"))
print(p.p1.eff.trial)
df.p1 <- read.csv("Mean Amplitude for Window 100-230/eff_summary_triallevel.csv")
df.p1$n_trials <- as.numeric(sapply(strsplit(df.p1$cond_s,"_"), `[`, 2))
p.p1.eff.trial <- ggplot(df.p1, aes(x = n_trials, y = mean)) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = .2) +
geom_line() + geom_point()+
scale_x_continuous(limits = c(9, 101), breaks = seq(10, 90, by = 10)) +
theme(legend.position = "bottom") +
labs(x = "Number of Trials", y = expression("Effect Size (Cohen's d)")) +
ggtitle("P1") +
scale_fill_manual(values = c("#990000", "gray50", "orange")) +
scale_color_manual(values = c("#990000", "gray50", "orange"))
print(p.p1.eff.trial)
library(ggpubr)
ggsave("VEP_Eff_TrialLevel_Example.jpg", ggarrange(p.n1.eff.trial, p.p1.eff.trial, ncol=1, nrow=2, common.legend = FALSE, legend="bottom",labels = c("N1", "P1"), font.label = list(size = 18, face = "bold")), width = 10, height = 14, units = 'in', dpi = 150)
df.n1 <- read.csv("Mean Amplitude for Window 75-130/rel_summary_overall.csv")
# Setting negative values to zero
df.n1$mean[df.n1$mean < 0] <- 0
df.n1$lower_pct[df.n1$lower_pct < 0] <- 0
df.n1$upper_pct[df.n1$upper_pct < 0] <- 0
p.n1.rel <- ggplot(df.n1, aes(x = cond_s, y = mean, fill = cond_s)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.95), alpha = 0.7) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = 0.2) +
labs(x = "Condition", y = expression("Effect Size (Cohen's d)")) +
theme(legend.position = "none") +
ggtitle("N1 Effect Size") +
scale_fill_manual(values = c("#990000", "gray", "orange")) +
scale_color_manual(values = c("#990000", "gray", "orange"))
# Display the plot
print(p.n1.rel)
p.n1.rel <- ggplot(df.n1, aes(x = cond_s, y = mean, fill = cond_s)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.95), alpha = 0.7) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = 0.2) +
labs(x = "Condition", y = expression("Effect Size (Cohen's d)")) +
theme(legend.position = "none") +
ggtitle("N1 Reliability") +
scale_fill_manual(values = c("#990000", "gray", "orange")) +
scale_color_manual(values = c("#990000", "gray", "orange"))
# Display the plot
print(p.n1.rel)
df.p1 <- read.csv("/Mean Amplitude for Window 100-230/rel_summary_overall.csv")
# Setting negative values to zero
df.p1$mean[df.p1$mean < 0] <- 0
df.p1$lower_pct[df.p1$lower_pct < 0] <- 0
df.p1$upper_pct[df.p1$upper_pct < 0] <- 0
df.p1 <- read.csv("/Mean Amplitude for Window 100-230/rel_summary_overall.csv")
# Setting negative values to zero
df.p1$mean[df.p1$mean < 0] <- 0
df.p1$lower_pct[df.p1$lower_pct < 0] <- 0
df.p1$upper_pct[df.p1$upper_pct < 0] <- 0
df.p1 <- read.csv("/Mean Amplitude for Window 100-230/rel_summary_overall.csv")
# Setting negative values to zero
df.p1$mean[df.p1$mean < 0] <- 0
df.p1$lower_pct[df.p1$lower_pct < 0] <- 0
df.p1$upper_pct[df.p1$upper_pct < 0] <- 0
p.p1.rel <- ggplot(df.p1, aes(x = cond_s, y = mean, fill = cond_s)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.95), alpha = 0.7) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = 0.2) +
labs(x = "Condition", y = expression("Effect Size (Cohen's d)")) +
theme(legend.position = "none") +
ggtitle("P1 Reliability") +
scale_fill_manual(values = c("#990000", "gray", "orange")) +
scale_color_manual(values = c("#990000", "gray", "orange"))
# Display the plot
print(p.p1.rel)
df.p1 <- read.csv("/Mean Amplitude for Window 100-230/rel_summary_overall.csv")
df.n1 <- read.csv("Mean Amplitude for Window 100-230/rel_summary_overall.csv")
# Setting negative values to zero
df.n1$mean[df.n1$mean < 0] <- 0
df.n1$lower_pct[df.n1$lower_pct < 0] <- 0
df.n1$upper_pct[df.n1$upper_pct < 0] <- 0
p.n1.rel <- ggplot(df.n1, aes(x = cond_s, y = mean, fill = cond_s)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.95), alpha = 0.7) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = 0.2) +
labs(x = "Condition", y = expression("Effect Size (Cohen's d)")) +
theme(legend.position = "none") +
ggtitle("N1 Reliability") +
scale_fill_manual(values = c("#990000", "gray", "orange")) +
scale_color_manual(values = c("#990000", "gray", "orange"))
# Display the plot
print(p.n1.rel)
View(df.n1)
print(p.p1.eff.trial)
list.of.packages <- c("psych","ggplot2", "dplyr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
# Loading packages
lapply(list.of.packages, require, character.only = TRUE)
# Setting suggested plotting options
my_opts <- list(theme_classic() + theme(axis.text=element_text(size=14), axis.title=element_text(size=15,face="bold"), legend.title=element_text(size=14,face="bold"), legend.text=element_text(size=13), strip.text.x = element_text(size = 14, face="bold")))
setwd("/Users/macbook/Desktop/Reliability_Project_Scripts/READIE_Toolbox_0422/results/ERP_results")
############################################################
dfm <- read.csv("Mean Amplitude for Window 75-130/SME_triallevel.csv")
(p.n1.sme <- ggplot(dfm, aes(x =cond,y=aSEM, fill = cond)) +
stat_summary(fun.y = mean, geom = "bar", position=position_dodge(width=0.95), alpha = .7) +
geom_point(aes(colour=cond), size=1, position = "jitter", alpha = .4) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width=.3, position=position_dodge(width=0.95)) +
my_opts + labs(y = expression("Standardized Measurement Error")) +
theme(legend.position="none") + ggtitle("N1 VEP Task") )
# Note that this task does not have a meaningful condition variable. Feel free to change that so it best fit your study!
dfm <- read.csv("Mean Amplitude for Window 100-230/SME_triallevel.csv")
(p.p1.sme <- ggplot(dfm, aes(x =cond,y=aSEM, fill = cond)) +
stat_summary(fun.y = mean, geom = "bar", position=position_dodge(width=0.95), alpha = .7) +
geom_point(aes(colour=cond), size=1, position = "jitter", alpha = .4) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width=.3, position=position_dodge(width=0.95)) +
my_opts + labs(y = expression("Standardized Measurement Error")) +
theme(legend.position="none") + ggtitle("P1 VEP Task") )
# Note that this task does not have a meaningful condition variable. Feel free to change that so it best fit your study!
library(ggpubr)
ggsave("VEP_SME_Example_Fig.jpg", ggarrange(p.n1.sme, p.p1.sme, ncol=1, nrow=2, common.legend = FALSE, legend="none",labels = c("A", "B"), font.label = list(size = 18, face = "bold")), width = 7, height = 14, units = 'in', dpi = 150)
df.n1 <- read.csv("Mean Amplitude for Window 75-130/eff_summary_overall.csv")
# Plotting the data
p.n1.eff <- ggplot(df.n1, aes(x = cond_s, y = mean, fill = cond_s)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.95), alpha = 0.7) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = 0.2) +
labs(x = "Condition", y = expression("Effect Size (Cohen's d)")) +
theme(legend.position = "none") +
ggtitle("N1 Effect Size") +
scale_fill_manual(values = c("#990000", "gray", "orange")) +
scale_color_manual(values = c("#990000", "gray", "orange"))
# Display the plot
print(p.n1.eff)
df.p1 <- read.csv("Mean Amplitude for Window 100-230/eff_summary_overall.csv")
p.p1.eff <- ggplot(df.p1, aes(x = cond_s, y = mean, fill = cond_s)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.95), alpha = 0.7) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = 0.2) +
labs(x = "Condition", y = expression("Effect Size (Cohen's d)")) +
theme(legend.position = "none") +
ggtitle("N1 Effect Size") +
scale_fill_manual(values = c("#990000", "gray", "orange")) +
scale_color_manual(values = c("#990000", "gray", "orange"))
# Display the plot
print(p.p1.eff)
library(ggpubr)
ggsave("VEP_Eff_Overall_Example.jpg", ggarrange(p.n1.eff, p.p1.eff, ncol=1, nrow=2, common.legend = FALSE, legend="none",labels = c("N1", "P1"), font.label = list(size = 18, face = "bold")), width = 7, height = 14, units = 'in', dpi = 150)
df.n1 <- read.csv("Mean Amplitude for Window 75-130/eff_summary_triallevel.csv")
df.n1$n_trials <- as.numeric(sapply(strsplit(df.n1$cond_s,"_"), `[`, 2))
p.n1.eff.trial <- ggplot(df.n1, aes(x = n_trials, y = mean)) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = .2) +
geom_line() + geom_point()+
scale_x_continuous(limits = c(9, 101), breaks = seq(10, 90, by = 10)) +
theme(legend.position = "bottom") +
labs(x = "Number of Trials", y = expression("Effect Size (Cohen's d)")) +
ggtitle("N1") +
scale_fill_manual(values = c("#990000", "gray50", "orange")) +
scale_color_manual(values = c("#990000", "gray50", "orange"))
print(p.n1.eff.trial)
df.p1 <- read.csv("Mean Amplitude for Window 100-230/eff_summary_triallevel.csv")
df.p1$n_trials <- as.numeric(sapply(strsplit(df.p1$cond_s,"_"), `[`, 2))
p.p1.eff.trial <- ggplot(df.p1, aes(x = n_trials, y = mean)) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = .2) +
geom_line() + geom_point()+
scale_x_continuous(limits = c(9, 101), breaks = seq(10, 90, by = 10)) +
theme(legend.position = "bottom") +
labs(x = "Number of Trials", y = expression("Effect Size (Cohen's d)")) +
ggtitle("P1") +
scale_fill_manual(values = c("#990000", "gray50", "orange")) +
scale_color_manual(values = c("#990000", "gray50", "orange"))
print(p.p1.eff.trial)
library(ggpubr)
ggsave("VEP_Eff_TrialLevel_Example.jpg", ggarrange(p.n1.eff.trial, p.p1.eff.trial, ncol=1, nrow=2, common.legend = FALSE, legend="bottom",labels = c("N1", "P1"), font.label = list(size = 18, face = "bold")), width = 10, height = 14, units = 'in', dpi = 150)
dfm <- read.csv("Mean Amplitude for Window 75-130/SME_triallevel.csv")
(p.n1.sme <- ggplot(dfm, aes(x =cond,y=aSEM, fill = cond)) +
stat_summary(fun.y = mean, geom = "bar", position=position_dodge(width=0.95), alpha = .7) +
geom_point(aes(colour=cond), size=1, position = "jitter", alpha = .4) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width=.3, position=position_dodge(width=0.95)) +
my_opts + labs(y = expression("Standardized Measurement Error")) +
theme(legend.position="none") + ggtitle("N1 VEP Task") )
dfm
list.of.packages <- c("psych","ggplot2", "dplyr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
# Loading packages
lapply(list.of.packages, require, character.only = TRUE)
# Setting suggested plotting options
my_opts <- list(theme_classic() + theme(axis.text=element_text(size=14), axis.title=element_text(size=15,face="bold"), legend.title=element_text(size=14,face="bold"), legend.text=element_text(size=13), strip.text.x = element_text(size = 14, face="bold")))
setwd("/Users/macbook/Desktop/Reliability_Project_Scripts/READIE_Toolbox_0422/results/ERP_results")
############################################################
dfm <- read.csv("Mean Amplitude for Window 75-130/SME_triallevel.csv")
(p.n1.sme <- ggplot(dfm, aes(x =cond,y=aSEM, fill = cond)) +
stat_summary(fun.y = mean, geom = "bar", position=position_dodge(width=0.95), alpha = .7) +
geom_point(aes(colour=cond), size=1, position = "jitter", alpha = .4) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width=.3, position=position_dodge(width=0.95)) +
my_opts + labs(y = expression("Standardized Measurement Error")) +
theme(legend.position="none") + ggtitle("N1 VEP Task") )
# Note that this task does not have a meaningful condition variable. Feel free to change that so it best fit your study!
dfm <- read.csv("Mean Amplitude for Window 100-230/SME_triallevel.csv")
(p.p1.sme <- ggplot(dfm, aes(x =cond,y=aSEM, fill = cond)) +
stat_summary(fun.y = mean, geom = "bar", position=position_dodge(width=0.95), alpha = .7) +
geom_point(aes(colour=cond), size=1, position = "jitter", alpha = .4) +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width=.3, position=position_dodge(width=0.95)) +
my_opts + labs(y = expression("Standardized Measurement Error")) +
theme(legend.position="none") + ggtitle("P1 VEP Task") )
# Note that this task does not have a meaningful condition variable. Feel free to change that so it best fit your study!
library(ggpubr)
ggsave("VEP_SME_Example_Fig.jpg", ggarrange(p.n1.sme, p.p1.sme, ncol=1, nrow=2, common.legend = FALSE, legend="none",labels = c("A", "B"), font.label = list(size = 18, face = "bold")), width = 7, height = 14, units = 'in', dpi = 150)
df.n1 <- read.csv("Mean Amplitude for Window 75-130/eff_summary_overall.csv")
# Plotting the data
p.n1.eff <- ggplot(df.n1, aes(x = cond_s, y = mean, fill = cond_s)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.95), alpha = 0.7) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = 0.2) +
labs(x = "Condition", y = expression("Effect Size (Cohen's d)")) +
theme(legend.position = "none") +
ggtitle("N1 Effect Size") +
scale_fill_manual(values = c("#990000", "gray", "orange")) +
scale_color_manual(values = c("#990000", "gray", "orange"))
# Display the plot
print(p.n1.eff)
df.p1 <- read.csv("Mean Amplitude for Window 100-230/eff_summary_overall.csv")
p.p1.eff <- ggplot(df.p1, aes(x = cond_s, y = mean, fill = cond_s)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.95), alpha = 0.7) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = 0.2) +
labs(x = "Condition", y = expression("Effect Size (Cohen's d)")) +
theme(legend.position = "none") +
ggtitle("N1 Effect Size") +
scale_fill_manual(values = c("#990000", "gray", "orange")) +
scale_color_manual(values = c("#990000", "gray", "orange"))
# Display the plot
print(p.p1.eff)
library(ggpubr)
ggsave("VEP_Eff_Overall_Example.jpg", ggarrange(p.n1.eff, p.p1.eff, ncol=1, nrow=2, common.legend = FALSE, legend="none",labels = c("N1", "P1"), font.label = list(size = 18, face = "bold")), width = 7, height = 14, units = 'in', dpi = 150)
df.n1 <- read.csv("Mean Amplitude for Window 75-130/eff_summary_triallevel.csv")
df.n1$n_trials <- as.numeric(sapply(strsplit(df.n1$cond_s,"_"), `[`, 2))
p.n1.eff.trial <- ggplot(df.n1, aes(x = n_trials, y = mean)) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = .2) +
geom_line() + geom_point()+
scale_x_continuous(limits = c(9, 101), breaks = seq(10, 90, by = 10)) +
theme(legend.position = "bottom") +
labs(x = "Number of Trials", y = expression("Effect Size (Cohen's d)")) +
ggtitle("N1") +
scale_fill_manual(values = c("#990000", "gray50", "orange")) +
scale_color_manual(values = c("#990000", "gray50", "orange"))
print(p.n1.eff.trial)
df.p1 <- read.csv("Mean Amplitude for Window 100-230/eff_summary_triallevel.csv")
df.p1$n_trials <- as.numeric(sapply(strsplit(df.p1$cond_s,"_"), `[`, 2))
p.p1.eff.trial <- ggplot(df.p1, aes(x = n_trials, y = mean)) +
geom_errorbar(aes(ymin = lower_pct, ymax = upper_pct), width = .2) +
geom_line() + geom_point()+
scale_x_continuous(limits = c(9, 101), breaks = seq(10, 90, by = 10)) +
theme(legend.position = "bottom") +
labs(x = "Number of Trials", y = expression("Effect Size (Cohen's d)")) +
ggtitle("P1") +
scale_fill_manual(values = c("#990000", "gray50", "orange")) +
scale_color_manual(values = c("#990000", "gray50", "orange"))
print(p.p1.eff.trial)
library(ggpubr)
ggsave("VEP_Eff_TrialLevel_Example.jpg", ggarrange(p.n1.eff.trial, p.p1.eff.trial, ncol=1, nrow=2, common.legend = FALSE, legend="bottom",labels = c("N1", "P1"), font.label = list(size = 18, face = "bold")), width = 10, height = 14, units = 'in', dpi = 150)
